% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LDnClustering.R
\name{LDnClustering}
\alias{LDnClustering}
\title{Linkage disequilibrium (LD) network clustering}
\usage{
LDnClustering(snp, map, nSNPs = 1000, w1 = 10, w2 = 100,
  LD_threshold1 = 0.5, LD_threshold2 = 0.7, PC_threshold = 0.8,
  mc.cores = 1, plot.network = NULL, threshold_net = 0.9)
}
\arguments{
\item{snp}{A matrix with individuals as rows and bi-allelic SNP genotypes as columns. SNPs must be coded as 0,1 or 2 for the number of alleles of the reference nucleotide.}

\item{map}{A matrix with each row correspoinding a column in \code{snp}, column one corresponding to chromosome or linkage group and column two corresponding to physical position in the genome.}

\item{nSNPs}{Desired number of SNPs per window.}

\item{w1}{Window size for defining putative recombination hotspots. Default is 10.}

\item{w2}{Window size for estimating LD values (smaller is faster but may break up large clusters caused e.g. by inversion polymorphism).}

\item{LD_threshold1}{Minimum LD value within a cluster}

\item{LD_threshold2}{Minimum median LD within each cluster}

\item{PC_threshold}{Minimum cummulative amount of genetic variation explained by extracted PCs}

\item{mc.cores}{Number of cores for mclapply}

\item{plot.network}{File name for plotting network. If \code{NULL} (default) no network is plotted.}

\item{threshold_net}{Threshold for edges when plotting network.}
}
\value{
Returns a list of five objects. \code{cluster_summary} is a data frame that contains most of the relevant information for each cluster, inluding summary statistics (Median LD, MAD etc, see below). \code{cluster_PCs} includes a matrix of individuals (rows) and PCs (columns) corresponding to each row in \code{cluster_summary}. This is what you use for subsequent GWA analyses. The third object (\code{clusters}) contains a list of locus indexes (each entry corresponding to a row in \code{cluster_summary} for entries where PC=1). The fourth and fifth objects are files matrixes similar to \code{cluster_PCs} except there will be one column per cluster with the either the SNP with the highest intra cluster median LD ('maximally connected SNP', MCL) or the consensus SNP (Cons), respectively. See example code for details. These last two files are expected to work better when LD thresholds are higher and SNPs in clusters or more strongly correlated, but no simualtions have been done to test this yet.
The columns in file \code{cluster_summary} are:
\item{Chr}{Chromosome or linkage group identifer}
\item{Window}{Window identifier, recycled among chromosomes}
\item{Pos}{Mean position of SNPs in a cluster}
\item{Min}{Most downstream position of SNPs in a cluster}
\item{Max}{Most upstream position of SNPs in a cluster}
\item{Range}{Max-Min}
\item{nSNPs}{Number of SNPs in the cluster}
\item{Median}{Median pair wise LD between loci in a cluster}
\item{MAD}{Median absolute deviation among pair wise LD-values between loci in a cluster}
\item{PC}{PC identifier (first PC explaining most of the genetic variation)}
\item{PVE}{Cummulative proportion of variation explained by each PC}
\item{Grp}{Unique group identifier for PCs extracted from each cluster. Used by \code{\link{emmax_group}}}
}
\description{
Finds clusters of loci connected by high LD within non-overlapping windows and summerises this information using Principal Component Analysis, to be used in Genome Wide Association (GWA) analyses.
}
\details{
Uses complete linkage clustering within non-overlapping windows of SNPs (within chromosomes) to find groups of correlated SNPs connected by high LD. \cr
\cr
Window breakpoints are placed where r^2 between adjacent SNPs within a window (defined by \code{w1}) is below \code{LD_threshold1}. \code{nSNPs} determines the goal size for each window; smaller windows will produce faster compuation times. \cr
\cr
First, a graph object is created using all pairwise r^2 values between SNPs within each window, and edges (representing r^2 values) < LD_threshold1 are removed. This breaks the initial graph into sub-graphs. 
Removing edges like this and decomposing the graph is equivalent to a \code{sinlge linkage} clustering algorithm, with the draw back that clusters formed via single linkage clustering may be forced together due to single elements being close to each other, even though many of the elements in each cluster may be very distant to each other ('chaining-phenomenon').
For the (potentially long and elongated) sub-clusters produced in step one, a \code{complete linkage clustering} algorithim is performed (all edged need to be connected by a threshold value of r^2, resulting in more compact and highly connected clusters). \cr
\cr
With the \code{complete linkage clustering} trees clades with median LD>\code{LD_threshold2} are are recursively found. 
Thus \code{LD_threshold1} is typically set to lower than \code{LD_threshold1} and aims to break the initial network into sub-clusters, thus increasing compuational speed (i.e. it would also be possible to produce a complete linkage clustering tree for the whole window and then recursively find the relevant clades to extract). \cr
\cr
From each cluster as many Principal Components (\code{PCs}) as is required to explain >= \code{PC_threshold} are extracted. 
To increase compuational speed for large windows, or if a physical limit to how large clusters one is intrested in, window size (\code{w2}) for estimating r^2 can also be set to something less than the window size. This will in practice limit size of the clusters to (\code{w2}).
This algorithm is performed by chromosome and window, and can thus be parallelized (\code{mc.cores}).\cr
\cr
It is also possible to plot LD-networks for different cluster solutions. For this you can specify a path for where the figure will be saved (\code{plot.network}). The parameter \code{threshold_net} determines the minimum value for each edge that is allowed in the network (i.e is equivalent to a single linkage clustering network). Each LD-cluster has a unique (arbitrary) color combination and black vertices reprsent loci that are not part of any cluster, i.e. should be considered independently in GWA analsyes. Minimum for \code{plot.network} is './', which exports figure to the working directory. Only works for data sets with up to 1000 SNPs and it is recommended that \code{threshold_net} is ~LD2.
}
\examples{
## Arabidopsis sample data (1000 first SNPs, Chr 1)
data(LDna)
# this will first remove all edges with r^2>0.5, then within each resulting sub-cluster will recursively find clades where median LD>0.7. Will then extract PCs based on these SNPs such that at least 80\% of the varitation is explained 
data_0.5_0.7 <- LDnClustering(snp=snp_ara, 
                                  map=map_ara, 
                                  nSNPs = 1000, 
                                  w2 = 100, 
                                  LD_threshold1 = 0.5, 
                                  LD_threshold2 = 0.7,
                                  PC_threshold = 0.8)
## this groups the original 1000 SNPs into 508 clusters                                 
length(data_0.5_0.7$clusters) 
## with the following distribution of SNPs in each cluster
table(data_0.5_0.7$cluster_summary$nSNPs)

## Plot graphs, only edges above \\code{threshold_net} are shown. Lower LD-threhsold settings produce larger and 'less' connected clusters.
\dontrun{
a <- LDnClustering(snp=snp_ara, 
                  map=map_ara, 
                  nSNPs = 1000, 
                  w2 = 100, 
                  LD_threshold1 = 0.3, 
                  LD_threshold2 = 0.5, 
                  PC_threshold = 0.8,
                  plot.network = './',
                  threshold_net = 0.5)

b <- LDnClustering(snp=snp_ara, 
                  map=map_ara, 
                  nSNPs = 1000, 
                  w2 = 100, 
                  LD_threshold1 = 0.5, 
                  LD_threshold2 = 0.7, 
                  PC_threshold = 0.8,
                  plot.network = './',
                  threshold_net = 0.5)
}
                  
## test with simulated phenotypes ##
\dontrun{
data <- data_0.5_0.7 ## try also with lower threshold settins for LD, see above
library(MASS)

## samplesize
n=nrow(snp_ara)

## generate multinomial global variance taking into accont the global relatedness tructure, "K" (part of LDna data) estimated using the full data set (200Kbp)
sig2 <- 20 # global variance, the bigger this value is, the less heritability
u <- mvrnorm(n = 1, mu=rep(0,n), Sigma=sig2*K)
## environmental variance
e <- rnorm(n, mean = 0, sd = 1) 
## randomly select a single QTL
Qtl <- sample(1:ncol(snp_ara), 1)
y <- snp_ara[,Qtl]
## the phenotype
Y=y+e+u

## use 'emmax_group' to perform GWAS
#' # based on PCs
pvals_PC <- emmax_group(Y, X=data$cluster_PCs, Grp=data$cluster_summary$Grp, K, B=NULL)
# based on the locus with the highest median LD among loci in the cluster
pvals_MCL <- emmax_group(Y, X=apply(data$MCL, 2, as.numeric), Grp=1:length(data$clusters), K, B=NULL)
# based on consensus sequence of the SNPs in a cluster
pvals_Cons <- emmax_group(Y, X=apply(data$Cons, 2, as.numeric), Grp=1:length(data$clusters), K, B=NULL)

## compare to when performing tests independently for each SNP
pvals_snp <- emmax_group(Y, X=snp_ara, Grp=1:ncol(snp_ara),K, B=NULL)

## plot results ##
par(mfcol=c(4,1))
par(mar=c(4,4,1,1))

# snps treated individually
plot(map_ara[,2], -log10(pvals_snp), pch=20, main='Each SNP tested independently', xlab='Position (Mb)')
points(map_ara[,2][Qtl], -log10(pvals_snp)[Qtl], pch=20, col='red') 
## Bonferroni significance threshold
abline(h=-log10(0.05/ncol(snp_ara)), lty=2)

# emmax based PC(s) from each cluster
col <- sapply(data$clusters, function(x) ifelse(any(x==Qtl), 'red', 'black'))
plot(unique(data$cluster_summary$Pos), -log10(pvals_PC), pch=20, col=col, xlab='Position (Mb)', main='Based on PCs')
## Bonferroni significance threshold
abline(h=-log10(0.05/length(data$clusters)), lty=2)

# emmax based on most connected locus from each cluster
plot(unique(data$cluster_summary$Pos), -log10(pvals_MCL), pch=20, col=col, xlab='Position (Mb)',  main='Based on highest LD locus')
## Bonferroni significance threshold
abline(h=-log10(0.05/length(data$clusters)), lty=2)

# emmax based on consensus sequence from each cluster
plot(unique(data$cluster_summary$Pos), -log10(pvals_Cons), pch=20, col=col, xlab='Position (Mb)',  main='Based on consensus SNP')
## Bonferroni significance threshold
abline(h=-log10(0.05/length(data$clusters)), lty=2)

## heritablity for this Qtl is:
var(y)/var(Y)
}

}
\references{
Kemppainen, P., Knight, C. G., Sarma, D. K., Hlaing, T., Prakash, A., Maung Maung, Y. N., Walton, C. (2015). Linkage disequilibrium network analysis (LDna) gives a global view of chromosomal inversions, local adaptation and geographic structure. Molecular Ecology Resources, 15(5), 1031-1045. https://doi.org/10.1111/1755-0998.12369\cr
\cr
Li, Z., Kemppainen, P., Rastas, P., Merila, J. Linkage disequilibrium clustering-based approach for association mapping with tightly linked genome-wide data. Accepted to Molecular Ecology Resources.
}
\seealso{
\code{\link{emmax_group}}
}
\author{
Petri Kemppainen \email{petrikemppainen2@gmail.com}, zitong.li \email{lizitong1985@gmail.com}
}
\keyword{Linkage}
\keyword{clustering,}
\keyword{complexity}
\keyword{disequilibrium}
\keyword{network}
\keyword{reduction}
